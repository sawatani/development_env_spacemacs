build_dir: "{{ansible_env.HOME}}/devel/workspace"

miniconda_ver: '4.5.12'
miniconda_checksums:
  Miniconda3-4.5.12-Linux-x86_64.sh: md5:866ae9dff53ad0874e1d1a60b1ad1ef8
miniconda_make_sys_default: true

conda_env_name: jnote
conda_env_environment: conda-jnote.yml
conda_env_activate_for_login_shell: true

manala_apt_packages:
  - git
  - jq
  - libtinfo-dev
  - libzmq3-dev
  - libcairo2-dev
  - libpango1.0-dev
  - libmagic-dev
  - libblas-dev
  - liblapack-dev

haskell_stack_ver: '1.9.3'
haskell_stack_checksums:
  '1.9.3':
    # https://github.com/commercialhaskell/stack/releases/download/v1.9.3/stack-1.9.3-linux-x86_64.tar.gz
    linux-x86_64: sha256:e2363728e5818ccc68db9371c15af892a9a1fc86d808d0a9a77257f13696e946
haskell_stack_resolver: 'lts-13.5'

jupyter_notebook_dir: "{{ansible_env.HOME}}/devel/Jupyter"
jupyter_notebook_repo: git@github.com:sawatani/jupyter_storage.git
jupyter_notebook_gitconfig:
  - file: info/exclude
    content: |
      .*
  - file: info/attributes
    content: |
      *.ipynb filter=clean_ipynb
      *.ipynb diff=ipynb
  - file: config
    content: |
      [filter "clean_ipynb"]
        required = true
        smudge = cat
        clean = jq --indent 1 --monochrome-output '. + if .metadata.git.suppress_outputs | not then { cells: [.cells[] | . + if .cell_type == \"code\" then { outputs: [], execution_count: null } else {} end ] } else {} end'
